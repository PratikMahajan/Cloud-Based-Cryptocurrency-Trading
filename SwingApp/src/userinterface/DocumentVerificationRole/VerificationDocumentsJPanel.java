/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DocumentVerificationRole;

import Business.Enterprise.Enterprise;
import Business.Organization.DocumentVerificationOrganization;
import Business.Organization.Organization;
import Business.UserAccount.MyAwsCredentials;
import Business.UserAccount.UserAccount;
import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3Client;
import com.amazonaws.services.s3.model.GetObjectRequest;
import com.amazonaws.services.s3.model.S3Object;
import java.awt.CardLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import org.json.JSONException;

/**
 *
 * @author Ankit
 */
public class VerificationDocumentsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form VerificationDocumentsJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private DocumentVerificationOrganization documentVerificationOrganization;
    private String data;
    ButtonGroup grp;
    public VerificationDocumentsJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization documentVerificationOrganization, Enterprise enterprise, String data) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise  = enterprise;
        this.documentVerificationOrganization = (DocumentVerificationOrganization) documentVerificationOrganization;
        this.data=data;
        docimgdisp();
        
        grp=new ButtonGroup();
        grp.add(verified);
        grp.add(unverified);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void docimgdisp()
    {
            String bucketName     = "aedprojectvalidate";
            MyAwsCredentials as= new MyAwsCredentials();
            AWSCredentials credentials = new BasicAWSCredentials(as.getAccessKeyID(), as.getSecretAccessKey());
            AmazonS3 s3client = new AmazonS3Client(credentials);
        
            S3Object s3object = s3client.getObject(new GetObjectRequest(bucketName, data));
            
            System.out.println(s3object.getObjectMetadata().getContentType());
            System.out.println(s3object.getObjectMetadata().getContentLength());

            BufferedImage img = null;
            try 
            {
                img = ImageIO.read(s3object.getObjectContent());
            } 
            catch (IOException e) 
            {
                e.printStackTrace();
            }
            Image pic = img.getScaledInstance(600, 370 ,Image.SCALE_SMOOTH);
            ImageIcon perImg= new ImageIcon(pic);
            docimg.setIcon(perImg);
    }
    
    
    private void setStatus()
    {
        int verif=0;
        if(grp.getSelection()==verified.getModel())
        {
            verif= 1 ;
        }
        else
        {
            verif= 0;
        }
        
        
        
        try {

		URL url = new URL("http://aedstock.herokuapp.com/sendVerify");
		HttpURLConnection conn = (HttpURLConnection) url.openConnection();
		conn.setRequestMethod("POST");
		conn.setRequestProperty("Content-Type", "application/json");
                conn.setDoOutput(true);
                
		String input = "{\"address\":\""+data+"\",\"bool\":"+verif+"}";

		OutputStream os = conn.getOutputStream();
		os.write(input.getBytes());
		os.flush();
                
                if(conn.getResponseCode() == 200){
                    System.out.println("Response positive");
                }
		if (conn.getResponseCode() != 200) {
			throw new RuntimeException("Failed : HTTP error code : "
					+ conn.getResponseCode());
		}

//		BufferedReader br = new BufferedReader(new InputStreamReader(
//			(conn.getInputStream())));
////
//		String output;
//                output = br.readLine();
////		while ((output = br.readLine()) != null) {
////			System.out.println(output);
////		}
//                output = output.replace("[", "").replace("]", "");
//                JSONObject obj = new JSONObject(output);
//                Double price = obj.getDouble("Price");
////                System.out.println(firstItem.getInt("id"));
////                System.out.println(price);
//                String pr=price.toString();

		
                conn.disconnect();

	  } catch (MalformedURLException e) {

		e.printStackTrace();

	  } catch (IOException e) {

		e.printStackTrace();

	  }
        
        
        
        
        
        
    }
    
    
    
    
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        backJBtn = new javax.swing.JButton();
        docimg = new javax.swing.JLabel();
        unverified = new javax.swing.JRadioButton();
        verified = new javax.swing.JRadioButton();
        btnSubmit = new javax.swing.JButton();

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Verify Documents:");

        backJBtn.setText("<< Back");
        backJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtnActionPerformed(evt);
            }
        });

        unverified.setText("UnVerified");

        verified.setText("Verified");
        verified.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifiedActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backJBtn)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(docimg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(148, 148, 148))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(427, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(unverified)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(verified)
                        .addGap(94, 94, 94)
                        .addComponent(btnSubmit)))
                .addGap(211, 211, 211))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(docimg, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addComponent(unverified)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(verified)
                    .addComponent(btnSubmit))
                .addGap(28, 28, 28)
                .addComponent(backJBtn))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJBtnActionPerformed

    private void verifiedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifiedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_verifiedActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        
        setStatus();
        
        
        
    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJBtn;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel docimg;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton unverified;
    private javax.swing.JRadioButton verified;
    // End of variables declaration//GEN-END:variables
}
